# Use this cell to begin, and add as many cells as you need to complete your analysis!
#
# get all the necessary libraries for the analysis
#
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.style as style
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.tree import DecisionTreeRegressor
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import PowerTransformer
from sklearn.metrics import r2_score,mean_squared_error
plt.style.use('ggplot')

#read the toyota csv file from folder DATA
#
cars = pd.read_csv('DATA/toyota.csv')

#
#   check the first records of dataframe cars. 
cars.head()

# show cars's dataframe columns. There are 9 column.: model, year, price, transmission, mileage
# fuelType, tax, mpg, engineSize
cars.columns

#
#    Show the numeric columns and for each one indicates statistical data: count, mean,std,
#    min, 25%,50%,75% and max. 
#    the numeric columns are: year, price, mileage, tax, mpg and engineSize
#     
#    In columns price, for example,  the average price for the dataset is 12522 pounds, std = 6345,
#    min = 850, 25% 8290, 50% = 10795, 75% 14995 and max = 29995 pounds
cars.describe()

#
#  Show the type of data for each column.  The numeric type is int64 or float64. The object type are
#  category data: model, transmission, fuelType, 
#  type int64: year, price, tax and mileage
#  type float64: mpg, engineSize
cars.info()
#
#   check if the dataframe cars has any null values in columns. 
#   Shows one line per column or feature indicating the number of nulls for each feature
#There are no null values: all columns of features show a number 0.
print(cars.isnull().sum())
#
#   Show the description and number of unique values of each category column that is not numeric.
#  the display shows the following:
#for models:
#[' GT86' ' Corolla' ' RAV4' ' Yaris' ' Auris' ' Aygo' ' C-HR' ' Prius'
# ' Avensis' ' Verso' ' Hilux' ' PROACE VERSO' ' Land Cruiser' ' Supra'
# ' Camry' ' Verso-S' ' IQ' ' Urban Cruiser']
#18 total models
#
#for year:
#[2016 2017 2015 2020 2013 2019 2018 2014 2012 2005 2003 2004 2001 2008
# 2007 2010 2011 2006 2009 2002 1999 2000 1998]
#23 total number of year
#
#for transmission:
#['Manual' 'Automatic' 'Semi-Auto' 'Other']
#4 total types of transmission
#
#for fuelType:
#['Petrol' 'Other' 'Hybrid' 'Diesel']
#4 total fuelType
#
#for engineSize:
#[2.  1.8 1.2 1.6 1.4 2.5 2.2 1.5 1.  1.3 0.  2.4 3.  2.8 4.2 4.5]
#16 total types of engineSize
#
print(cars['model'].unique())
print(cars['model'].nunique())
print(cars['year'].unique())
print(cars['year'].nunique())
print(cars['transmission'].unique())
print(cars['transmission'].nunique())
print(cars['fuelType'].unique())
print(cars['fuelType'].nunique())
print(cars['engineSize'].unique())
print(cars['engineSize'].nunique())






